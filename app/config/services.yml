#imports:
#    - { resource: legacy_aliases.yml }

# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
#    parameter_name: value

services:
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Uloc\Bundle\AppBundle\:
        resource: '../../src/Uloc/Bundle/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Uloc/Bundle/AppBundle/{Entity,Repository,Test,Tests,Api/ApiProblemException.php}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    Uloc\Bundle\AppBundle\Controller\:
        resource: '../../src/Uloc/Bundle/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    Uloc\Bundle\AppBundle\EventListener\ApiExceptionSubscriber:
        arguments: ['%kernel.debug%', '@Uloc\Bundle\AppBundle\Api\ResponseFactory', '@logger']
        tags:
            - { name: kernel.event_subscriber }

    #pagination_factory:
    #    class: AppBundle\Pagination\PaginationFactory
    #    arguments: ['@router']

    Uloc\Bundle\AppBundle\Security\JwtTokenAuthenticator:

    Uloc\Bundle\AppBundle\Api\ResponseFactory:

    #custom_hateoas_json_serializer:
    #    class: AppBundle\Serializer\CustomHATEOASJsonSerializer
    Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface: '@lexik_jwt_authentication.jwt_encoder'
    Doctrine\ORM\EntityManager: '@doctrine.orm.default_entity_manager'

    #FidelidadeBundle\Controller\:
     #       resource: '../../src/FidelidadeBundle/Controller'
      #      public: true
       #     tags: ['controller.service_arguments']

    # FidelidadeBundle\:
           # resource: '../../src/FidelidadeBundle/*'
            # you can exclude directories or files
            # but if a service is unused, it's removed anyway
            #exclude: '../../src/FidelidadeBundle/{Entity,Repository,Tests}'

    app.response_listener:
            class:      Uloc\Bundle\AppBundle\EventListener\ResponseListener
            tags:
               - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    Uloc\Bundle\AppBundle\Services\FileUpload\FileUploader:
            public: true
            arguments:
                $destinoPublic: '%files_upload_directory%'
                $destinoPrivate: '%files_upload_private_directory%'

    twig.extension.intl:
            class: Twig_Extensions_Extension_Intl
            tags:
                - { name: twig.extension }

    app.file_uploader:
            class: Uloc\Bundle\AppBundle\Services\FileUpload\FileUploader
            public: true
            arguments:
                $destinoPublic: '%files_upload_directory%'
                $destinoPrivate: '%files_upload_private_directory%'

#    pregao.topic:
#            class: Uloc\Bundle\AppBundle\Topic\PregaoTopic
#            tags:
#                - { name: gos_web_socket.topic }

    snc_second_level_cache:
        class: '%snc_redis.doctrine_cache_predis.class%'
        arguments:
            - '@snc_redis.default'
